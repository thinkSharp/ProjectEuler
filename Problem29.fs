module Problem29
open System

// Problem 29 -- How many distinct terms are in the sequence generated by ab for 2 >= a <= 100 and 2 >= b <= 100?

let pow baseX times =
  let rec powInt count result =
     match count with 
      | x when x = times -> result
      | _ -> powInt (count + 1I) (result * baseX)
  powInt 0I 1I

let SeqGenerated aBegin aEnd bBegin bEnd =
    let rec generatePowOfSeq baseA powB (result:Set<bigint>) =
        match baseA, powB with
         | x,y when x >= aEnd && y >= bEnd -> result
         | x,y when y = bEnd -> let newRes = pow (x + 1I) bBegin
                                printf "first %A \n" newRes
                                let newR = result.Add(newRes) 
                                generatePowOfSeq (x + 1I) bBegin newR
         | _ -> let newRes = pow baseA (powB + 1I) 
                //printf "Sec %A \n" newRes
                generatePowOfSeq baseA (powB + 1I) (result.Add(newRes))
    let res = generatePowOfSeq aBegin (bBegin - 1I) Set.empty
    res.Count

// Problem 29 -- How many distinct terms are in the sequence generated by ab for 2 >= a <= 100 and 2 >= b <= 100?
